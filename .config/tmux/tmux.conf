set-option -g allow-rename off

set-option -sa terminal-overrides ',xterm-256color:RGB'
set -g default-shell "/usr/bin/zsh"
# set-option -g pane-border-status
# set-option -g pane-border-format " #P: #{pane_current_command} "

# Change " to ' for split
unbind '"'
unbind "'"
bind   "'" split-window -v
bind   '"' split-window -h

# use vi keys in copy mode
setw -g mode-keys vi

# copy mode keys
# bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi y send-keys -X rectangle-toggle

# pane resizing  
bind -rn M-k resize-pane -U 5
bind -rn M-j resize-pane -D 5
bind -rn M-h resize-pane -L 5
bind -rn M-l resize-pane -R 5

bind -rn M-K resize-pane -U
bind -rn M-J resize-pane -D
bind -rn M-H resize-pane -L
bind -rn M-L resize-pane -R

# pane switching
bind -r k select-pane -U 
bind -r j select-pane -D 
bind -r h select-pane -L 
bind -r l select-pane -R 

# Change prefix to C-a
set-option -g prefix C-a
unbind-key           C-b
bind-key             C-a send-prefix

# No layout changing
# unbind-key Space

# Status on and off
bind-key F2 set-option status

# Pane zooming
# bind-key -n F11  resize-pane -Z 

# Disabling the prompt after prefix-x
bind-key x kill-pane

set-option -g status-position top

# Repeat-time lowered :default 1000
set-option -g repeat-time 300
set -g repeat-time 0

# Sane scrolling
set -g mouse on

# base index starts from 1
set -g base-index 1

# tmux prompt key
unbind ';'
unbind ':'
bind-key ';' command-prompt
bind-key : last-pane

# last session with l 
# bind-key l switch-client

# new session
# unbind 'p'
# unbind 'P'
bind 'P' command-prompt -p "New session:" \
   "new-session -s '%%'"
# bind-key 'P' previous-window

# sync panes
# bind-key C-s set-window-option synchronize-panes

bind c new-window -c "#{pane_current_path}"

bind-key -r f run-shell "tmux neww ~/scripts/tmux-sessionizer"

## Start vim-tmux-navigator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")' if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

##### End vim-tmux-navigator


# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)

# List of plugins
# 
# plugins here

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'



run '~/.config/tmux/plugins/tpm/tpm'
